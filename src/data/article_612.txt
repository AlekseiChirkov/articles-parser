Название: Безопасная многопоточность в Rust

Автор: F3kilo

Дата: 2021-09-21, 17:25

Теги: Блог компании OTUS, Программирование *, Проектирование и рефакторинг
*, Rust *

Контент: Представьте ситуацию: вы решили добавить функционал в некоторую
сущность (класс, структуру, ...). Для этого вам понадобилось хранить
внутри сущности дополнительные данные. Вы добавляете приватные поля,
меняете и читаете их внутри методов, интерфейс методов не изменяется,
и всё выглядит хорошо. И не просто выглядит, а компилируется,
запускается и проходит тесты. Красота... А потом, в один прекрасный
день, прод падает. И может быть даже, теряет часть важных данных. Вы с
коллегами начинаете искать причину поломки. И оказывается, что та
сущность, которую вы дополняли год назад, делится между несколькими
потоками, а поля добавленные вами не потокобезопасны и поэтому гонка
за доступ к ним в какой-то момент вызывает их повреждение. Неприятно,
согласитесь? Хотелось бы иметь инструмент, позволяющий избегать
подобных ситуаций. И язык программирования Rust такой инструмент
предоставляет.