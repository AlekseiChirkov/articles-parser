Название: Умный аналитик – глупый разработчик vs. глупый аналитик – умный
разработчик

Автор: Theon4eg

Дата: 2021-09-16, 02:50

Теги: Анализ и проектирование систем *, Управление разработкой *

Контент: Или как понять, когда остановитьсяКак-то раз мой коллега, лид
разработки, после затяжного спора о том, что должно быть в системной
спецификации, подошел ко мне и спросил:— Скажи, а зачем нам вообще
нужны аналитики?— И действительно, зачем? – подумал тогда я и написал
заявлениеВопрос этот, как бы крамольно он ни звучал, очень правильный.
Системный анализ, как фаза разработки приложения, присутствует всегда
(даже если это системы класса «Hello, world»), а вот системный
аналитик, как выделенная роль – нет. Выделение отдельной специальной
роли работает точно так же, как и разделение труда в обычном
производстве: для маленьких задач не целесообразно, для больших задач
– оправданно. При таком разделении  системный аналитик забирает на
себя часть задач и функций некоего «универсального» исполнителя
задачи. Однако, подобное разделение труда имеет свою цену: это потеря
знаний при коммуникации, более сложное управление процессом и др. В
этой статье я хочу поделиться своим опытом: описать минусы крайностей
и дать рекомендации по распределению обязанностей между системными
аналитиками и разработчиками.Итак, нам нужен системный аналитик,
который формирует требования и разработчик, который эти требования
реализует в коде.Если спросить у любого разработчика, каким главным
свойством должны обладать системные требования, он, скорее всего,
скажет: «чтобы было понятно, что делать». И это проблема. Заключается
эта проблема в том, что между сбором и систематизацией требований
(прямая и понятная задача аналитика) и непосредственно кодированием
(прямая и понятная задача разработчика) есть область проектирования
решения; задачи из этой области могут и должны выполнять обе роли.