Название: Kotlin Native. Работаем с новой моделью памяти

Автор: anioutka

Дата: 2021-09-18, 21:20

Теги: Разработка под iOS *, Разработка мобильных приложений *, Разработка
под Android *, Kotlin *

Контент: Всем доброго дня! С вами Анна Жаркова, ведущий мобильный разработчик
компании Usetech. Продолжаем рассматривать способы многопоточный
работы в Kotlin Native. В предыдущих статьях мы уже рассмотрели
существующие способы работы с многопоточностью с корутинами и без, и
что делать с имеющимися болями. Теперь поговорим о новой модели
управления памятью, которая появилась совсем недавно.31 августа
компания JetBrains представили превью новой модели управления памятью
в Kotlin Native. Основной упор команда разработчиков сделала на
безопасность шаринга между потоками, устранение утечек памяти и
освобождение нас от использования специальных аннотаций. Также
доработка коснулась Coroutines, и теперь можно без опаски
переключаться между контекстами корутин без заморозки. Обновления
подхватили и Ktor:  Итак, что же нового появится в версии Kotlin
1.6.0-M1-139: 1. Заявлено, что мы можем убрать все freeze() блоки (в
том числе и во всех фоновых Worker), и переключаться между контекстами
и потоками без каких-либо проблем. 2.Использование AtomicReference или
 FreezableAtomicReference не приводит к утечкам памяти.3.При работе с
глобальными константами не нужно теперь
использовать SharedImmutable.4.При работе с Worker.execute producer
больше не требует возвращать изолированный подграф объектов. Однако
есть и нюансы: